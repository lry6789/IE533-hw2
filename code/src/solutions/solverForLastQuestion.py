import time

import numpy as np
import matplotlib.pyplot as plt # 导入 Matplotlib 工具包
import networkx as nx  # 导入 NetworkX 工具包

# 1. 天然气管道铺设
G1 = nx.Graph()  # 创建：空的 无向图
G1.add_weighted_edges_from([(1, 0, 1), (2, 0, 2), (2, 1, 1), (3, 0, 3), (3, 2, 1), (5, 4, 1),
                            (6, 5, 1), (7, 6, 1), (9, 1, 8), (9, 2, 7), (9, 3, 6), (9, 8, 1), 
                            (10, 3, 7), (11, 2, 9), (11, 10, 1), (12, 9, 3), (12, 10, 2), (14, 1, 13), 
                            (14, 2, 12), (14, 13, 1), (15, 7, 8), (15, 13, 2), (16, 13, 3), (16, 14, 2), 
                            (17, 1, 16), (17, 2, 15), (17, 5, 12), (17, 7, 10), (17, 9, 8), (17, 12, 5), 
                            (17, 13, 4), (17, 14, 3), (17, 15, 2), (18, 1, 17), (18, 3, 15), (18, 12, 6), 
                            (18, 13, 5), (19, 1, 18), (20, 19, 1), (21, 17, 4), (21, 2, 19), (21, 18, 3), 
                            (21, 19, 2), (21, 7, 14), (22, 17, 5), (22, 2, 20), (22, 19, 3), (23, 2, 21), 
                            (23, 19, 4), (24, 17, 7), (24, 2, 22), (24, 19, 5), (24, 9, 15), (25, 17, 8), 
                            (25, 2, 23), (25, 19, 6), (25, 9, 16), (25, 14, 11), (26, 17, 9), (26, 2, 24), 
                            (26, 19, 7), (26, 9, 17), (27, 17, 10), (27, 2, 25), (27, 19, 8), (27, 5, 22), 
                            (28, 1, 27), (28, 17, 11), (28, 21, 7), (29, 18, 11), (29, 28, 1), (30, 25, 5), 
                            (30, 28, 2), (31, 17, 14), (31, 2, 29), (31, 28, 3), (32, 17, 15), (32, 5, 27), 
                            (32, 6, 26), (32, 28, 4), (32, 15, 17), (32, 31, 1), (33, 28, 5), (34, 17, 17), 
                            (34, 2, 32), (34, 18, 16), (34, 28, 6), (35, 17, 18), (35, 28, 7), (36, 17, 19), 
                            (36, 2, 34), (36, 24, 12), (36, 14, 22), (37, 17, 20), (37, 7, 30), (37, 14, 23), 
                            (38, 17, 21), (38, 37, 1), (38, 7, 31), (38, 15, 23), (39, 5, 34), (39, 38, 1), 
(39, 9, 30), (40, 38, 2), (40, 9, 31), (40, 11, 29), (41, 1, 40), (41, 2, 39), (41, 3, 38), (41, 38, 3), 
(41, 25, 16), (41, 31, 10), (42, 2, 40), (42, 9, 33), (42, 41, 1), (43, 3, 40), (43, 36, 7), (43, 5, 38), 
(43, 39, 4), (43, 41, 2), (43, 12, 31), (43, 15, 28), (43, 17, 26), (43, 18, 25), (43, 20, 23), (43, 21, 22),
(43, 23, 20), (43, 24, 19), (43, 26, 17), (43, 27, 16), (43, 31, 12), (44, 17, 27), (44, 18, 26), (44, 43, 1), 
(44, 28, 16), (45, 1, 44), (45, 2, 43), (45, 22, 23), (45, 44, 1), (46, 1, 45), (46, 25, 21), (47, 37, 10), 
(47, 23, 24), (47, 24, 23), (48, 35, 13), (48, 21, 27), (48, 25, 23), (48, 43, 5), (48, 15, 33), (48, 47, 1), 
(49, 24, 25), (49, 47, 2), (50, 48, 2), (50, 17, 33), (50, 2, 48), (50, 18, 32), (50, 21, 29), (50, 10, 40),
(50, 12, 38), (50, 44, 6), (51, 32, 19), (51, 1, 50), (51, 2, 49), (51, 34, 17), (51, 3, 48), (51, 35, 16), 
(51, 6, 45), (51, 38, 13), (51, 7, 44), (51, 42, 9), (51, 17, 34), (51, 49, 2), (51, 18, 33), (51, 50, 1), 
(51, 21, 30), (51, 23, 28), (51, 25, 26), (51, 26, 25), (51, 30, 21), (51, 31, 20), (52, 32, 20), (52, 17, 35), (52, 50, 2),
(52, 6, 46), (52, 27, 25), (52, 45, 7), (53, 18, 35), (53, 50, 3), (54, 17, 37), (54, 2, 52), (54, 18, 36), (54, 34, 20),
(54, 50, 4), (54, 51, 3), (54, 53, 1), (54, 27, 27), (55, 36, 19), (55, 6, 49), (56, 52, 4), (56, 40, 16), (56, 26, 30), 
(56, 42, 14), (57, 51, 6), (57, 37, 20), (58, 37, 21), (58, 29, 29), (59, 49, 10), (59, 51, 8), (59, 37, 22), (59, 23, 36),
(59, 9, 50), (59, 25, 34), (59, 43, 16), (59, 14, 45), (60, 18, 42), (60, 9, 51), (61, 9, 52), (62, 9, 53), (63, 11, 52), 
(63, 27, 36), (63, 43, 20), (64, 63, 1), (65, 17, 48), (65, 59, 6), (65, 63, 2), (66, 17, 49), (66, 2, 64), (66, 51, 15),
(66, 43, 23), (67, 17, 50), (67, 51, 16), (68, 16, 52), (68, 49, 19), (68, 51, 17), (68, 54, 14), (68, 24, 44), (68, 26, 42),
(68, 27, 41), (68, 14, 54), (69, 23, 46), (69, 11, 58), (70, 32, 38), (70, 17, 53), (70, 68, 2), (70, 54, 16), (70, 7, 63),
(70, 55, 15), (70, 43, 27), (70, 59, 11), (71, 35, 36), (71, 59, 12), (71, 60, 11), (71, 14, 57), (71, 62, 9), (72, 17, 55),
(72, 66, 6), (72, 37, 35), (72, 54, 18), (72, 59, 13), (73, 2, 71), (73, 68, 5), (73, 53, 20), (73, 71, 2), (73, 45, 28), (74, 29, 45),
(75, 66, 9), (75, 68, 7), (75, 54, 21), (75, 70, 5), (75, 7, 68), (75, 24, 51), (75, 57, 18), (75, 15, 60), (76, 48, 28), (76, 33, 43),
(76, 67, 9), (76, 24, 52), (76, 73, 3), (76, 27, 49), (76, 75, 1), (76, 60, 16), (76, 15, 61), (77, 17, 60), (77, 25, 52), (77, 75, 2), 
(78, 50, 28), (78, 54, 24), (79, 20, 59), (79, 26, 53), (79, 42, 37), (79, 27, 52), (79, 29, 50), (79, 30, 49), (79, 78, 1), (79, 15, 64),
(79, 31, 48), (80, 17, 63), (80, 72, 8), (80, 26, 54), (80, 27, 53), (80, 43, 37), (80, 76, 4), (81, 80, 1), (81, 43, 38), (81, 79, 2), 
(82, 17, 65), (83, 17, 66), (83, 2, 81), (83, 43, 40), (83, 79, 4), (84, 17, 67), (84, 33, 51), (84, 65, 19), (84, 68, 16), (84, 30, 54),
(85, 17, 68), (85, 3, 82), (86, 17, 69), (86, 31, 55), (87, 17, 70), (87, 65, 22), (87, 67, 20), (87, 83, 4), (87, 36, 51), (87, 70, 17), 
(87, 7, 80), (87, 24, 63), (87, 27, 60), (87, 12, 75), (88, 48, 40), (88, 17, 71), (88, 25, 63), (88, 12, 76), (88, 15, 73), (89, 17, 72),
(89, 4, 85), (89, 53, 36), (89, 9, 80), (89, 28, 61), (90, 42, 48), (91, 1, 90), (92, 89, 3), (92, 28, 64), (92, 76, 16), (92, 30, 62),
(93, 17, 76), (93, 2, 91), (94, 81, 13), (94, 20, 74), (94, 22, 72), (95, 92, 3), (96, 27, 69), (96, 92, 4), (97, 2, 95), (98, 17, 81), 
(98, 81, 17), (98, 2, 96), (98, 11, 87), (98, 43, 55), (99, 89, 10), (99, 43, 56), (100, 32, 68), (100, 43, 57), (101, 51, 50), 
(101, 60, 41), (102, 1, 101), (102, 17, 85), (102, 2, 100), (102, 50, 52), (102, 66, 36), (102, 53, 49), (102, 70, 32), (102, 12, 90),
(102, 44, 58), (102, 13, 89), (103, 17, 86), (103, 65, 38), (103, 37, 66), (103, 39, 64), (103, 24, 79), (103, 73, 30), (103, 27, 76),
(103, 31, 72), (104, 33, 71), (104, 2, 102), (104, 35, 69), (104, 38, 66), (104, 103, 1), (104, 11, 93), (104, 12, 92), (104, 46, 58), 
(104, 15, 89), (104, 48, 56), (104, 17, 87), (104, 81, 23), (104, 50, 54), (104, 84, 20), (104, 24, 80), (104, 25, 79), (104, 26, 78),
(104, 59, 45), (104, 61, 43), (104, 31, 73), (105, 2, 103), (105, 70, 35), (105, 23, 82), (105, 72, 33), (105, 104, 1), (105, 14, 91),
(106, 80, 26), (106, 96, 10), (106, 51, 55), (106, 7, 99), (106, 88, 18), (106, 76, 30), (107, 33, 74), (107, 34, 73), (108, 20, 88),
(108, 24, 84), (108, 105, 3), (108, 31, 77), (109, 79, 30), (110, 100, 10), (110, 79, 31), (111, 2, 109)])  # 向图中添加多条赋权边: (node1,node2,weight)
start = time.time()
T = nx.minimum_spanning_tree(G1)  # 返回包括最小生成树的图
end = time.time()
print("time used:" + str(end-start))
# print(T.nodes)  # 最小生成树的 顶点
# print(T.edges)  # 最小生成树的 边
# print(sorted(T.edges)) # 排序后的 最小生成树的 边
print(sorted(T.edges(data=True)))  # data=True 表示返回值包括边的权重
cost = 0
for (i,j) in sorted(T.edges):
    cost = cost + abs(i-j)
print("The total cost is "+str(cost))
# mst1 = nx.tree.minimum_spanning_edges(G1, algorithm="kruskal") # 返回最小生成树的边
# print(list(mst1))  # 最小生成树的 边
# mst2 = nx.tree.minimum_spanning_edges(G1, algorithm="prim",data=False)  # data=False 表示返回值不带权
# print(list(mst2))

# 绘图
# pos={1:(1,5),2:(3,1),3:(3,9),4:(5,5),5:(7,1),6:(6,9),7:(8,7),8:(9,4)}  # 指定顶点位置
# nx.draw(G1, pos, with_labels=True, node_color='c', alpha=0.8)  # 绘制无向图
# labels = nx.get_edge_attributes(G1,'weight')
# nx.draw_networkx_edge_labels(G1,pos,edge_labels=labels, font_color='m') # 显示边的权值
# nx.draw_networkx_edges(G1,pos,edgelist=T.edges,edge_color='b',width=4)  # 设置指定边的颜色
# plt.show()

